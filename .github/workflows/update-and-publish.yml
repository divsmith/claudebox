name: Monitor Claude Code Updates and Publish Docker Image

on:
  schedule:
    # Run every 6 hours
    - cron: '0 */6 * * *'
  workflow_dispatch:
    # Allow manual triggering
  push:
    branches:
      - main
    paths:
      - 'Dockerfile'
      - '.github/workflows/update-and-publish.yml'

jobs:
  check-for-updates:
    runs-on: ubuntu-latest
    outputs:
      has_new_version: ${{ steps.check_version.outputs.has_new_version }}
      new_version: ${{ steps.check_version.outputs.new_version }}
      triggered_by_push: ${{ github.event_name == 'push' }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Check for @anthropic-ai/claude-code updates
        id: check_version
        run: |
          # If triggered by push, skip version check
          if [ "${{ github.event_name }}" = "push" ]; then
            echo "Triggered by push, skipping version check"
            echo "has_new_version=true" >> $GITHUB_OUTPUT
            echo "new_version=push-triggered" >> $GITHUB_OUTPUT
            echo "updated_packages=push-triggered" >> $GITHUB_OUTPUT
          else
            # Check @anthropic-ai/claude-code updates
            CLAUDE_LATEST_VERSION=$(curl -s https://registry.npmjs.org/@anthropic-ai/claude-code | jq -r '.["dist-tags"].latest')
            CLAUDE_CURRENT_VERSION=$(grep -o '@anthropic-ai/claude-code@[^ ]*' Dockerfile | cut -d'@' -f3)

            echo "Claude Code - Latest: $CLAUDE_LATEST_VERSION, Current: $CLAUDE_CURRENT_VERSION"

            UPDATED_PACKAGES=""
            NEW_VERSION=""

            if [ "$CLAUDE_LATEST_VERSION" != "$CLAUDE_CURRENT_VERSION" ]; then
              echo "New claude-code version detected: $CLAUDE_LATEST_VERSION"
              UPDATED_PACKAGES="$UPDATED_PACKAGES claude-code:$CLAUDE_LATEST_VERSION"
              NEW_VERSION="$CLAUDE_LATEST_VERSION"
            fi

            if [ -n "$UPDATED_PACKAGES" ]; then
              echo "Updates detected for:$UPDATED_PACKAGES"
              echo "has_new_version=true" >> $GITHUB_OUTPUT
              echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT
              echo "updated_packages=$UPDATED_PACKAGES" >> $GITHUB_OUTPUT
            else
              echo "No new versions detected"
              echo "has_new_version=false" >> $GITHUB_OUTPUT
            fi
          fi

  build-and-publish:
    needs: check-for-updates
    # Run if new version detected OR if triggered by push
    if: needs.check-for-updates.outputs.has_new_version == 'true' || needs.check-for-updates.outputs.triggered_by_push == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Update Dockerfile with new versions (only for scheduled runs)
        if: github.event_name != 'push'
        run: |
          UPDATED_PACKAGES="${{ needs.check-for-updates.outputs.updated_packages }}"
          echo "Updating packages: $UPDATED_PACKAGES"

          # Update claude-code if needed
          if [[ "$UPDATED_PACKAGES" == *"claude-code:"* ]]; then
            CLAUDE_VERSION=$(echo "$UPDATED_PACKAGES" | grep -o 'claude-code:[^ ]*' | cut -d':' -f2)
            echo "Updating claude-code to version: $CLAUDE_VERSION"
            sed -i "s/@anthropic-ai\/claude-code@[^ ]*/@anthropic-ai\/claude-code@$CLAUDE_VERSION/" Dockerfile
          fi

      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository_owner }}/claudebox
          tags: |
            type=raw,value=latest,enable={{is_default_branch}}
            type=raw,value=${{ needs.check-for-updates.outputs.new_version }}
            type=sha,prefix=

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Commit and push Dockerfile update (only for scheduled runs with actual updates)
        if: github.event_name != 'push' && needs.check-for-updates.outputs.has_new_version == 'true'
        run: |
          UPDATED_PACKAGES="${{ needs.check-for-updates.outputs.updated_packages }}"
          COMMIT_MSG="Update dependencies"

          if [[ "$UPDATED_PACKAGES" == *"claude-code:"* ]]; then
            CLAUDE_VERSION=$(echo "$UPDATED_PACKAGES" | grep -o 'claude-code:[^ ]*' | cut -d':' -f2)
            COMMIT_MSG="$COMMIT_MSG - claude-code to v$CLAUDE_VERSION"
          fi

          git config --local user.email "parker@parkersmith.us"
          git config --local user.name "Parker Smith"
          git add Dockerfile

          # Only commit if there are changes to commit
          if ! git diff --cached --quiet; then
            git commit -m "$COMMIT_MSG"
            git push
          else
            echo "No changes to commit"
          fi